#######################################################################
#                            Rust AtCoder Snippets                            #
#######################################################################

priority -50

snippet template "use proconio" b
use proconio::*;

fn main() {
	input! {
		${0}
	}
}
endsnippet

snippet adj "let mut adj = {}" b
type AdjList = BTreeMap<usize, Vec<usize>>;
let mut ${1:adj} = AdjList::new();
for (${2:a}, ${3:b}) in ${4:ab} {
	$1.entry($2).or_default().push($3);
	$1.entry($3).or_default().push($2);
}
${0}
endsnippet

snippet ijiter "h x w mass" b
for i in ${1:0..h} {
	for j in ${2:0..w} {
		${0}
	}
}
endsnippet

snippet dikstra "" b
endsnippet

snippet allpathsearch "all path search with permutations in graph" b
for path in (1..=n).permutations(n) {
	// 経路コスト
	let mut sum = 0;
	for edge in path.windows(2) {
		// 双方向であるため
		if let Some(c) = hm.get(&(edge[0].min(edge[1]), edge[1].max(edge[0]))) {
			sum += c;
		} else {
			break;
		}
	}
	ans = ans.max(sum);
}
endsnippet

